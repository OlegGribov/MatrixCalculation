plugins {
  id 'java'
  id 'application'
  id 'org.javamodularity.moduleplugin' version '1.8.12'
  id 'org.openjfx.javafxplugin' version '0.0.13'
  id 'org.beryx.jlink' version '2.25.0'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
  mavenCentral()
}

ext {
  junitVersion = '5.9.2'
}

tasks.withType(JavaCompile).configureEach {
  options.encoding = 'UTF-8'
}

application {
  mainModule = 'com.example.matrixcalculation'
  mainClass = 'com.example.matrixcalculation.MainController'
}

javafx {
  version = '19.0.2'
  modules = ['javafx.controls', 'javafx.fxml']
}

dependencies {
  implementation('org.controlsfx:controlsfx:11.1.2')
  implementation('com.dlsc.formsfx:formsfx-core:11.6.0') {
    exclude(group: 'org.openjfx')
  }
  implementation('org.kordamp.ikonli:ikonli-javafx:12.3.1')

  // Подключаем библиотеку тестирования JUnit
  testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
  testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
  testImplementation 'junit:junit:4.13.1'
  testImplementation project(path: ':')
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

  // Подключаем библиотеку log4j к проекту
  implementation 'org.apache.logging.log4j:log4j-api:2.21.1'
  implementation 'org.apache.logging.log4j:log4j-core:2.21.1'
}

test {
useJUnitPlatform()}

jlink {
  imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
  options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
  launcher {
    name = 'app'
  }
}

jlinkZip {
  group = 'distribution'
}